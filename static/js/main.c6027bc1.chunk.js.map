{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Business","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","key","SearchBar","term","location","sortBy","handleTermChange","bind","handleLocationChange","handleSearch","sortByOptions","sortByOption","setState","event","target","value","searchYelp","preventDefault","Object","keys","sortByOptionValue","getSortByClass","onClick","handleSortByChange","renderSortByOptions","onChange","placeholder","Yelp","search","fetch","headers","Authorization","then","response","json","jsonResponse","id","image_url","address1","review_count","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"+TA6BeA,G,yLAvBP,OACI,yBAAKC,UAAU,YACX,yBAAKA,UAAU,mBACX,yBAAKC,IAAKC,KAAKC,MAAMC,SAASC,SAAUC,IAAI,MAEhD,4BAAKJ,KAAKC,MAAMC,SAASG,MACzB,yBAAKP,UAAU,wBACX,yBAAKA,UAAU,oBACf,2BAAIE,KAAKC,MAAMC,SAASI,SACxB,2BAAIN,KAAKC,MAAMC,SAASK,MACxB,2BAAKP,KAAKC,MAAMC,SAASM,MAAzB,IAAmCR,KAAKC,MAAMC,SAASO,UAEvD,yBAAKX,UAAU,oBACf,4BAAME,KAAKC,MAAMC,SAASQ,UAC1B,wBAAIZ,UAAU,UAAWE,KAAKC,MAAMC,SAASS,QAC7C,2BAAKX,KAAKC,MAAMC,SAASU,oB,GAjBtBC,IAAMC,YCadC,E,uKAVP,OACI,yBAAKjB,UAAU,gBACVE,KAAKC,MAAMe,WAAWC,KAAI,SAAAf,GACvB,OAAO,kBAAC,EAAD,CAAUgB,IAAOhB,EAAUA,SAAaA,Y,GANxCW,IAAMC,WC0ElBK,G,wDAxEX,WAAYlB,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTY,KAAM,GACNC,SAAU,GACVC,OAAQ,cAEZ,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAC5B,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBAEpB,EAAKG,cAAgB,CACjB,aAAc,aACd,gBAAiB,SACjB,gBAAiB,gBAdP,E,2DAkBHC,GACX,OAAI5B,KAAKQ,MAAMc,SAAWM,EACf,SAEA,K,yCAIIA,GACf5B,KAAK6B,SAAS,CAACP,OAAQM,M,uCAGVE,GACb9B,KAAK6B,SAAS,CAACT,KAAMU,EAAMC,OAAOC,U,2CAGjBF,GACjB9B,KAAK6B,SAAS,CAACR,SAAUS,EAAMC,OAAOC,U,mCAG7BF,GACT9B,KAAKC,MAAMgC,WAAWjC,KAAKQ,MAAMY,KAAMpB,KAAKQ,MAAMa,SAAUrB,KAAKQ,MAAMc,QACvEQ,EAAMI,mB,4CAGa,IAAD,OAClB,OAAQC,OAAOC,KAAKpC,KAAK2B,eAAeV,KAAI,SAAAW,GACxC,IAAIS,EAAoB,EAAKV,cAAcC,GAC3C,OAAO,wBAAI9B,UAAY,EAAKwC,eAAeD,GAC3CnB,IAAQmB,EAAoBE,QAAS,EAAKC,mBAAmBhB,KAAK,EAAKa,IAChET,EAFA,U,+BAOX,OACI,yBAAK9B,UAAU,aACX,yBAAKA,UAAU,0BACX,4BACKE,KAAKyC,wBAGd,yBAAK3C,UAAU,oBACX,2BAAO4C,SAAW1C,KAAKuB,iBAAkBoB,YAAY,sBACrD,2BAAOD,SAAW1C,KAAKyB,qBAAuBkB,YAAY,YAE9D,yBAAK7C,UAAU,oBACX,uBAAGyC,QAASvC,KAAK0B,cAAjB,kB,GAlEIb,IAAMC,YC6Bf8B,EAhCF,CACTC,OAAQ,SAACzB,EAAKC,EAAUC,GACpB,OAAOwB,MAAM,sFAAD,OAC8E1B,EAD9E,qBAC+FC,EAD/F,oBACmHC,GAC3H,CACIyB,QAAS,CACLC,cAAc,UAAD,OARlB,uIAUAC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UACjBF,MAAK,SAAAG,GACJ,GAAGA,EAAapC,WACZ,OAAOoC,EAAapC,WAAWC,KAAI,SAAAf,GAC/B,MAAO,CACHmD,GAAInD,EAASmD,GACblD,SAAUD,EAASoD,UACnBjD,KAAMH,EAASG,KACfC,QAASJ,EAASmB,SAASkC,SAC3BhD,KAAML,EAASmB,SAASd,KACxBC,MAAON,EAASmB,SAASb,MACzBC,QAASP,EAASmB,SAASZ,QAC3BC,SAAUR,EAASQ,SACnBC,OAAQT,EAASS,OACjBC,YAAaV,EAASsD,sBCSnCC,E,kDA1Bb,WAAYxD,GAAO,IAAD,8BAChB,cAAMA,IACDO,MAAQ,CACXQ,WAAY,IAEd,EAAKiB,WAAa,EAAKA,WAAWT,KAAhB,gBALF,E,uDAQPJ,EAAKC,EAASC,GAAS,IAAD,OAE/BsB,EAAKC,OAAOzB,EAAKC,EAASC,GAAQ2B,MAAK,SAAAjC,GACrC,EAAKa,SAAS,CAACb,WAAYA,S,+BAI7B,OACE,yBAAKlB,UAAU,OACb,wCACA,kBAAC,EAAD,CAAWmC,WAAajC,KAAKiC,aAC7B,kBAAC,EAAD,CAAejB,WAAehB,KAAKQ,MAAMQ,kB,GApB/BH,IAAMC,WCKJ4C,QACW,cAA7BC,OAAOtC,SAASuC,UAEe,UAA7BD,OAAOtC,SAASuC,UAEhBD,OAAOtC,SAASuC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpB,MAAK,SAAAqB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c6027bc1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Business.css';\r\n\r\n\r\nclass Business extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Business\">\r\n                <div className=\"image-container\">\r\n                    <img src={this.props.business.imageSrc} alt=''/>\r\n                </div>\r\n                <h2>{this.props.business.name}</h2>\r\n                <div className=\"Business-information\">\r\n                    <div className=\"Business-address\">\r\n                    <p>{this.props.business.address}</p>\r\n                    <p>{this.props.business.city}</p>\r\n                    <p>{ this.props.business.state } { this.props.business.zipCode }</p>\r\n                    </div>\r\n                    <div className=\"Business-reviews\">\r\n                    <h3>{ this.props.business.category }</h3>\r\n                    <h3 className=\"rating\">{ this.props.business.rating }</h3>\r\n                    <p>{ this.props.business.reviewCount }</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Business;","import React from 'react';\r\nimport './BusinessList.css';\r\nimport Business from '../Business/Business';\r\n\r\nclass BusinessList extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"BusinessList\">\r\n                {this.props.businesses.map(business => {\r\n                    return <Business key= { business} business = { business }/>;\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BusinessList;","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            term: '',\r\n            location: '',\r\n            sortBy: 'best_match'\r\n        };\r\n        this.handleTermChange = this.handleTermChange.bind(this);\r\n        this.handleLocationChange = this.handleLocationChange.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n\r\n        this.sortByOptions = {\r\n            'Best Match': 'best_match',\r\n            'Highest Rated': 'rating',\r\n            'Most Reviewed': 'review_count'\r\n        };\r\n    }\r\n\r\n    getSortByClass(sortByOption){\r\n        if (this.state.sortBy === sortByOption){\r\n            return 'active';\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    handleSortByChange(sortByOption) {\r\n        this.setState({sortBy: sortByOption});\r\n    }\r\n\r\n    handleTermChange(event) {\r\n        this.setState({term: event.target.value});\r\n    }\r\n\r\n    handleLocationChange(event) {\r\n        this.setState({location: event.target.value});\r\n    }\r\n\r\n    handleSearch(event){\r\n        this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n        event.preventDefault();\r\n    }\r\n\r\n    renderSortByOptions() {\r\n        return (Object.keys(this.sortByOptions).map(sortByOption => {\r\n            let sortByOptionValue = this.sortByOptions[sortByOption];\r\n            return <li className= {this.getSortByClass(sortByOptionValue)} \r\n            key = { sortByOptionValue } onClick={this.handleSortByChange.bind(this,sortByOptionValue)}>\r\n                 { sortByOption } </li> })\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SearchBar\">\r\n                <div className=\"SearchBar-sort-options\">\r\n                    <ul>\r\n                        {this.renderSortByOptions()}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"SearchBar-fields\">\r\n                    <input onChange= {this.handleTermChange} placeholder=\"Search Businesses\" />\r\n                    <input onChange= {this.handleLocationChange}  placeholder=\"Where?\" />\r\n                </div>\r\n                <div className=\"SearchBar-submit\" >\r\n                    <a onClick={this.handleSearch} >Let's Go</a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","const apiKey = 'bDdh7fIBBX9NxQ0u8_FcWGc675KTIR_iABSFGpfozqcpuvMRAA1TK70cJj_mT7HUE5_tGIfxCfYhaaMnom7rNNsirlOmleuJ5Eg26WH0V6qNlY9XLRusEoNA-RLWXnYx';\r\n\r\nconst Yelp = {\r\n    search: (term,location, sortBy) => {\r\n        return fetch(\r\n            `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, \r\n            {\r\n                headers: {\r\n                    Authorization: `Bearer ${apiKey}`\r\n                }\r\n            }).then(response => {\r\n                return response.json();\r\n            }).then(jsonResponse => {\r\n                if(jsonResponse.businesses){\r\n                    return jsonResponse.businesses.map(business => {\r\n                        return {\r\n                            id: business.id,\r\n                            imageSrc: business.image_url,\r\n                            name: business.name,\r\n                            address: business.location.address1,\r\n                            city: business.location.city,\r\n                            state: business.location.state,\r\n                            zipCode: business.location.zipCode,\r\n                            category: business.category,\r\n                            rating: business.rating,\r\n                            reviewCount: business.review_count\r\n    \r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n};\r\n\r\nexport default Yelp;","import React from 'react';\nimport './App.css';\n// import logo from './logo.svg';\nimport BusinessList from '../BusinessList/BusinessList.js';\nimport SearchBar from '../SearchBar/SearchBar.js';\nimport Yelp from '../../util/Yelp';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      businesses: []\n    }\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n\n  searchYelp(term,location,sortBy) {\n    // console.log(`Searching Yelp with ${term}, ${location}, ${sortBy}`);\n    Yelp.search(term,location,sortBy).then(businesses => {\n      this.setState({businesses: businesses})\n    })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n        <SearchBar searchYelp= {this.searchYelp} />\n        <BusinessList  businesses = { this.state.businesses } /> \n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}